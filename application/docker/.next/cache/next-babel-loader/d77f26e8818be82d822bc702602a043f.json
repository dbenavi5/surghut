{"ast":null,"code":"// import React from 'react';\n// import axios from 'axios';\n// class Search extends React.Component {\n//     constructor (props) {\n//         super (props);\n//         this.state = {\n//             query: '',\n//             results: {},\n//             loading: false,\n//             message: ''\n//         };\n//         this.cancel = '';\n//     }\n//     fetchSearchResult = ( updatedPageNo = '', query) => {\n//         const pageNumber = updatedPageNo ? `&page=${updatedPageNo}` : '';\n//         const searchUrl = `http://api.airvisual.com/v2/cities?state=california&country=USA&key=93e7f28f-1f6b-4286-95cc-1fa2ea89b482&q=${query}${pageNumber}`;\n//         if( this.cancel) {\n//             this.cancel.cancel();\n//         }\n//         this.cancel = axios.CancelToken.source();\n//         axios.get( searchUrl, {\n//             cancelToken: this.cancel.token\n//         })\n//             .then(res => {\n//                 //console.warn(res);\n//                 const resultNotFoundMsg = ! res.data.data.length ? 'There are no more search results. Please try new search' : '';\n//                 this.setState({\n//                     results: res.data.data,\n//                     message: resultNotFoundMsg,\n//                     loading: false\n//                 })\n//             })\n//             .catch( error => {\n//                 if( axios.isCancel(error) || error ){\n//                     this.setState({\n//                         loading: false,\n//                         message: 'Failed to fetch the data. Please check network.'\n//                     })\n//                 }\n//             })\n//     };\n//     handleOnIputChange = ( event ) => {\n//         const query = event.target.value;\n//          if( ! query ) {\n//              this.setState({query, results: {}, message: ''});\n//          } else {\n//             this.setState({ query: query, loading: true, message:''}, () => {\n//                 this.fetchSearchResult( 1, query );\n//             });\n//          }\n//     };\n//     renderSearchResults =  () => {\n//         const { results } = this.state;\n//         if( Object.keys( results ).length && results.length ){\n//             return (\n//                 <div className=\"result-container\">\n//                     { results.map( result => {\n//                         return(\n//                             <a key={ result.city } href={ result.city } className=\"\">\n//                                 <h6 className=\"resultItem\">{ result.forecasts }</h6>\n//                                 {/* <a className=\"image\" href=\"{ result.forecasts }\" alt={result.country}>{ result.forecasts }</a> */}\n//                             </a>             \n//                         )\n//                     })}\n//                 </div>)\n//         }\n//     };\n//     render() {\n//         //const { query } = this.state;\n//         return (\n//             <div id= \"searchWrapper\">     \n//                 {/* <label className=\"search-label\" htmlFor=\"search-input\" >\n//                     <input \n//                         type=\"text\" \n//                         value={query}\n//                         name=\"query\"\n//                         id= \"search-input\" \n//                         placeholder=\"Search for something...\"\n//                         onChange={this.handleOnIputChange}\n//                     />\n//                     <i className=\"fa fa-search search-icon\" aria-hidden=\"true\"></i>\n//                 </label>  */}\n//                 {/* Error Message */}\n//                 {message && <p className=\"message\">{ message }</p>}\n//                 {/* Results */}\n//                 { this.renderSearchResults() }\n//             </div> \n//         )\n//     }\n// }\n// export default Search;","map":{"version":3,"sources":["/Users/dianabenavides/practice/application/docker/components/Search.js"],"names":[],"mappings":"AAAA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAGA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AAEA","sourcesContent":["// import React from 'react';\n// import axios from 'axios';\n\n// class Search extends React.Component {\n\n//     constructor (props) {\n//         super (props);\n\n//         this.state = {\n//             query: '',\n//             results: {},\n//             loading: false,\n//             message: ''\n//         };\n\n//         this.cancel = '';\n        \n//     }\n\n//     fetchSearchResult = ( updatedPageNo = '', query) => {\n\n//         const pageNumber = updatedPageNo ? `&page=${updatedPageNo}` : '';\n//         const searchUrl = `http://api.airvisual.com/v2/cities?state=california&country=USA&key=93e7f28f-1f6b-4286-95cc-1fa2ea89b482&q=${query}${pageNumber}`;\n\n//         if( this.cancel) {\n//             this.cancel.cancel();\n//         }\n\n//         this.cancel = axios.CancelToken.source();\n\n//         axios.get( searchUrl, {\n//             cancelToken: this.cancel.token\n//         })\n//             .then(res => {\n//                 //console.warn(res);\n//                 const resultNotFoundMsg = ! res.data.data.length ? 'There are no more search results. Please try new search' : '';\n\n//                 this.setState({\n//                     results: res.data.data,\n//                     message: resultNotFoundMsg,\n//                     loading: false\n//                 })\n                \n//             })\n//             .catch( error => {\n//                 if( axios.isCancel(error) || error ){\n//                     this.setState({\n//                         loading: false,\n//                         message: 'Failed to fetch the data. Please check network.'\n//                     })\n//                 }\n//             })\n//     };\n\n//     handleOnIputChange = ( event ) => {\n//         const query = event.target.value;\n//          if( ! query ) {\n//              this.setState({query, results: {}, message: ''});\n//          } else {\n//             this.setState({ query: query, loading: true, message:''}, () => {\n//                 this.fetchSearchResult( 1, query );\n//             });\n//          }\n        \n//     };\n\n//     renderSearchResults =  () => {\n//         const { results } = this.state;\n\n\n//         if( Object.keys( results ).length && results.length ){\n//             return (\n\n                \n//                 <div className=\"result-container\">\n//                     { results.map( result => {\n//                         return(\n//                             <a key={ result.city } href={ result.city } className=\"\">\n//                                 <h6 className=\"resultItem\">{ result.forecasts }</h6>\n                                \n//                                 {/* <a className=\"image\" href=\"{ result.forecasts }\" alt={result.country}>{ result.forecasts }</a> */}\n//                             </a>             \n//                         )\n//                     })}\n\n//                 </div>)\n//         }\n//     };\n\n//     render() {\n//         //const { query } = this.state;\n//         return (\n//             <div id= \"searchWrapper\">     \n//                 {/* <label className=\"search-label\" htmlFor=\"search-input\" >\n//                     <input \n//                         type=\"text\" \n//                         value={query}\n//                         name=\"query\"\n//                         id= \"search-input\" \n//                         placeholder=\"Search for something...\"\n//                         onChange={this.handleOnIputChange}\n//                     />\n//                     <i className=\"fa fa-search search-icon\" aria-hidden=\"true\"></i>\n//                 </label>  */}\n\n//                 {/* Error Message */}\n//                 {message && <p className=\"message\">{ message }</p>}\n\n//                 {/* Results */}\n//                 { this.renderSearchResults() }\n                \n//             </div> \n//         )\n//     }\n\n// }\n\n// export default Search;"]},"metadata":{},"sourceType":"script"}